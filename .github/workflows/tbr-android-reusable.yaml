name: Common Build Steps For Android
on:
  workflow_call:
    secrets:
      GET_CODE_FROM_PRIVATE_REPO:
        description: 'Secret for accessing private repo'
        required: true
      API_URL:
        description: 'API URL for the environment'
        required: true
      GRADLE_PROPERTIES:
        description: 'Gradle properties for the environment'
        required: true
      KEYSTORE:
        description: 'Keystore for the environment'
        required: true
      AZURE_CLIENT_ID:
        description: 'Azure Client ID for Login to blob'
        required: true
      AZURE_TENANT_ID:
        description: 'Azure TENANT ID for Login to blob'
        required: true
      AZURE_SUBSCRIPTION_ID:
        description: 'Azure TENANT ID for Login to blob'
        required: true
      AZURE_STORAGE_FOR_UPLOAD:
        description: 'Azure storage account for uploading APK'
        required: true
      UPLOAD_APK_ACCOUNT_KEY:
        description: 'Azure storage account key for uploading APK'
        required: true
      GOOGLE_MAPS_KEY:
        description: 'Key from Google Maps console to support map rendering'
        required: true
    inputs:
      environment:
        type: string
        description: 'Environment for the build'
        required: true
        default: 'Frontend_Development'
      target_branch:
        description: Name of the branch for initializing build from TBR Frontend repo
        default: 'main'
        type: string
      folder:
        type: string
        required: true
      appName:
        type: string
        required: true
        default: 'The Bike Rentals'
jobs:
  build-steps:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_GOOGLE_MAPS_KEY: ${{ secrets.GOOGLE_MAPS_KEY }}

      - name: Write Secret to file
        run: |
          echo "${{ secrets.GRADLE_PROPERTIES }}" > secret.txt

        

      - name: 'LOGIN TO AZURE - Upload to Blob'
        uses: azure/login@v2
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Upload to blob storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload --account-name ${{ secrets.AZURE_STORAGE_FOR_UPLOAD }} --auth-mode login -f secret.txt -c apks -n ${{inputs.folder}}/secret_${{ github.run_number }}_${{ github.run_attempt }}.txt
            az storage blob upload --account-name ${{ secrets.AZURE_STORAGE_FOR_UPLOAD }} --auth-mode login -f .env -c apks -n ${{inputs.folder}}/env_${{ github.run_number }}_${{ github.run_attempt }}.txt
