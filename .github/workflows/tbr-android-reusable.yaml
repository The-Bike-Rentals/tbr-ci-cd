name: Common Build Steps For Android
on:
  workflow_call:
    secrets:
      GET_CODE_FROM_PRIVATE_REPO:
        description: 'Secret for accessing private repo'
        required: true
      API_URL:
        description: 'API URL for the environment'
        required: true
      GRADLE_PROPERTIES:
        description: 'Gradle properties for the environment'
        required: true
      KEYSTORE:
        description: 'Keystore for the environment'
        required: true
      AZURE_CLIENT_ID:
        description: 'Azure Client ID for Login to blob'
        required: true
      AZURE_TENANT_ID:
        description: 'Azure TENANT ID for Login to blob'
        required: true
      AZURE_SUBSCRIPTION_ID:
        description: 'Azure TENANT ID for Login to blob'
        required: true
      AZURE_STORAGE_FOR_UPLOAD:
        description: 'Azure storage account for uploading APK'
        required: true
      UPLOAD_APK_ACCOUNT_KEY:
        description: 'Azure storage account key for uploading APK'
        required: true
    inputs:
      environment:
        type: string
        description: 'Environment for the build'
        required: true
        default: 'Frontend_Development'
      target_branch:
        description: Name of the branch for initializing build from TBR Frontend repo
        default: 'main'
        type: string
      folder:
        type: string
        required: true
      appName:
        type: string
        required: true
        default: 'The Bike Rentals'
jobs:
  build-steps:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Set Branch name for Future Use
        run: |
          target_branch=${{ inputs.target_branch || 'main' }}
          echo "target_branch=$target_branch" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          repository: The-Bike-Rentals/tbr-frontend
          ref: ${{ env.target_branch }}
          token: ${{ secrets.GET_CODE_FROM_PRIVATE_REPO }}

      - name: Run npm Install
        run: |
          sudo apt-get install -y xmlstarlet
          xmlstarlet ed -L -u "/resources/string" -v "${{ inputs.appName }}" android/app/src/main/res/values/strings.xml

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: zulu
          cache: gradle
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Run npm Install
        run: |
          npm i -g corepack
          npm install --force
      - name: Generate config.json for the environment
        run: |
          API_URL=${{ secrets.API_URL }}
          cat > src/config/config.json <<EOL
          {
            "apiBaseUrl": "$API_URL",
            "env": "${{ inputs.environment }}"
          }
          EOL
      - name: Restore gradle.properties
        env:
          GRADLE_PROPERTIES: ${{ secrets.GRADLE_PROPERTIES }}
          KEYSTORE: ${{ secrets.KEYSTORE }}
        run: |
          cd android
          echo "${GRADLE_PROPERTIES}" > ./gradle.properties
          echo "${KEYSTORE}" | base64 -d > ./app/release-signing.keystore
      - name: Build application
        run: |
          npm run release-android
      

      - name: 'LOGIN TO AZURE - Upload to Blob'
        uses: azure/login@v2
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Upload to blob storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload --account-name ${{ secrets.AZURE_STORAGE_FOR_UPLOAD }} --auth-mode login -f android/app/build/outputs/apk/release/app-release.apk -c apks -n ${{inputs.folder}}/tbr_${{ github.run_number }}_${{ github.run_attempt }}.apk
